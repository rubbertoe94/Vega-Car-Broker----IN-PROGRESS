{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/vehicle.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction VehicleFormComponent_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const make_r3 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", make_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(make_r3.name);\n  }\n}\nfunction VehicleFormComponent_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const model_r4 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", model_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(model_r4.name);\n  }\n}\nfunction VehicleFormComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"label\", 14);\n    i0.ɵɵelement(2, \"input\", 15);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const feature_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", feature_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", feature_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", feature_r5.name, \" \");\n  }\n}\nexport class VehicleFormComponent {\n  constructor(vehicleService) {\n    this.vehicleService = vehicleService;\n    this.vehicle = {};\n    this.features = [{\n      id: 1,\n      name: \"Feature1\"\n    }, {\n      id: 2,\n      name: \"Feature2\"\n    }, {\n      id: 3,\n      name: \"Feature3\"\n    }];\n  }\n  ngOnInit() {\n    this.vehicleService.getMakes().subscribe(result => {\n      this.makes = result;\n    });\n    // this.makeService.getFeatures().subscribe(result => {\n    //   this.features = result;\n    // })\n  }\n\n  onMakeChange() {\n    var selectedMake = this.makes.find(m => m.id == this.vehicle.make);\n    this.models = selectedMake ? selectedMake.models : [];\n  }\n}\nVehicleFormComponent.ɵfac = function VehicleFormComponent_Factory(t) {\n  return new (t || VehicleFormComponent)(i0.ɵɵdirectiveInject(i1.VehicleService));\n};\nVehicleFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VehicleFormComponent,\n  selectors: [[\"app-vehicle-form\"]],\n  decls: 29,\n  vars: 4,\n  consts: [[1, \"form-group\"], [\"for\", \"make\"], [\"id\", \"make\", \"name\", \"make\", 1, \"form-control\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"model\"], [\"id\", \"model\", 1, \"form-control\"], [\"for\", \"registered\", 1, \"radio-inline\", 2, \"margin-right\", \"10px\"], [\"type\", \"radio\", \"id\", \"registered\", \"name\", \"isRegistered\", \"value\", \"true\"], [\"for\", \"notRegistered\", 1, \"radio-inline\"], [\"type\", \"radio\", \"id\", \"notRegistered\", \"name\", \"isRegistered\", \"value\", \"false\"], [\"class\", \"checkbox\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"checkbox\"], [3, \"for\"], [\"type\", \"checkbox\", 3, \"id\"]],\n  template: function VehicleFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"New Vehicle\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\")(3, \"div\", 0)(4, \"label\", 1);\n      i0.ɵɵtext(5, \"Make\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"select\", 2);\n      i0.ɵɵlistener(\"change\", function VehicleFormComponent_Template_select_change_6_listener() {\n        return ctx.onMakeChange();\n      })(\"ngModelChange\", function VehicleFormComponent_Template_select_ngModelChange_6_listener($event) {\n        return ctx.vehicle.make = $event;\n      });\n      i0.ɵɵelement(7, \"option\", 3);\n      i0.ɵɵtemplate(8, VehicleFormComponent_option_8_Template, 2, 2, \"option\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 0)(10, \"label\", 5);\n      i0.ɵɵtext(11, \"Model\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"select\", 6);\n      i0.ɵɵelement(13, \"option\", 3);\n      i0.ɵɵtemplate(14, VehicleFormComponent_option_14_Template, 2, 2, \"option\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(15, \"br\");\n      i0.ɵɵelementStart(16, \"div\")(17, \"p\");\n      i0.ɵɵtext(18, \"Is the vehicle registered?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"label\", 7);\n      i0.ɵɵelement(20, \"input\", 8);\n      i0.ɵɵtext(21, \"Yes \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"label\", 9);\n      i0.ɵɵelement(23, \"input\", 10);\n      i0.ɵɵtext(24, \"No \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(25, \"br\");\n      i0.ɵɵelementStart(26, \"h2\");\n      i0.ɵɵtext(27, \"Features\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(28, VehicleFormComponent_div_28_Template, 4, 3, \"div\", 11);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.vehicle.make);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.makes);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.models);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.features);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAOYA,kCAAwD;IAAAA,YAAa;IAAAA,iBAAS;;;;IAA1CA,6CAAmB;IAACA,eAAa;IAAbA,kCAAa;;;;;IAOrEA,kCAA0D;IAAAA,YAAc;IAAAA,iBAAS;;;;IAA5CA,8CAAoB;IAACA,eAAc;IAAdA,mCAAc;;;;;IAgBhFA,+BAAuD;IAE/CA,4BAA2C;IAACA,YAChD;IAAAA,iBAAQ;;;;IAFDA,eAAoB;IAApBA,8CAAoB;IACAA,eAAmB;IAAnBA,6CAAmB;IAAEA,eAChD;IADgDA,gDAChD;;;ACxBR,OAAM,MAAOC,oBAAoB;EAajCC,YACUC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAZxB,YAAO,GAAQ,EAAE;IAEjB,aAAQ,GAAU,CAChB;MAACC,EAAE,EAAE,CAAC;MACNC,IAAI,EAAE;IAAU,CAAC,EACjB;MAACD,EAAE,EAAE,CAAC;MACNC,IAAI,EAAE;IAAU,CAAC,EACjB;MAACD,EAAE,EAAE,CAAC;MACNC,IAAI,EAAE;IAAU,CAAC,CAClB;EAG0C;EAE3CC,QAAQ;IACN,IAAI,CAACH,cAAc,CAACI,QAAQ,EAAE,CAACC,SAAS,CAACC,MAAM,IAAG;MAChD,IAAI,CAACC,KAAK,GAAGD,MAAM;IACrB,CAAC,CAAC;IAEF;IACA;IACA;EACF;;EAEAE,YAAY;IACZ,IAAIC,YAAY,GAAG,IAAI,CAACF,KAAK,CAACG,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACV,EAAE,IAAI,IAAI,CAACW,OAAO,CAACC,IAAI,CAAC;IAClE,IAAI,CAACC,MAAM,GAAGL,YAAY,GAAGA,YAAY,CAACK,MAAM,GAAG,EAAE;EACrD;;AA7BahB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTjCtB,0BAAI;MAAAA,2BAAW;MAAAA,iBAAK;MAEpBA,4BAAO;MAEmBA,oBAAI;MAAAA,iBAAQ;MAC9BA,iCAAwG;MAAjEA;QAAA,OAAUuB,kBAAc;MAAA,EAAC;QAAA;MAAA;MAC5DvB,4BAA0B;MAC1BA,2EAA8E;MAClFA,iBAAS;MAEbA,8BAAwB;MACDA,sBAAK;MAAAA,iBAAQ;MAChCA,kCAAwC;MACpCA,6BAA0B;MAC1BA,6EAAiF;MACrFA,iBAAS;MACNA,sBAAI;MAGXA,4BAAK;MACEA,2CAA0B;MAAAA,iBAAI;MACrCA,iCAAyE;MACrEA,4BAAqE;MAAAA,qBACzE;MAAAA,iBAAQ;MACRA,iCAAgD;MAC5CA,6BAAyE;MAAAA,oBAC7E;MAAAA,iBAAQ;MACFA,sBAAI;MAEVA,2BAAI;MAAAA,yBAAQ;MAAAA,iBAAK;MACjBA,wEAIM;MAGVA,iBAAO;;;MAhCkEA,eAA0B;MAA1BA,0CAA0B;MAE7DA,eAAQ;MAARA,mCAAQ;MAORA,eAAS;MAATA,oCAAS;MAgBDA,gBAAW;MAAXA,sCAAW","names":["i0","VehicleFormComponent","constructor","vehicleService","id","name","ngOnInit","getMakes","subscribe","result","makes","onMakeChange","selectedMake","find","m","vehicle","make","models","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\robfu\\vega\\ClientApp\\src\\app\\components\\vehicle-form\\vehicle-form.component.html","C:\\Users\\robfu\\vega\\ClientApp\\src\\app\\components\\vehicle-form\\vehicle-form.component.ts"],"sourcesContent":["<h1>New Vehicle</h1>\n\n<form >\n    <div class=\"form-group\">\n        <label for=\"make\">Make</label>\n        <select id=\"make\" class=\"form-control\" (change)=\"onMakeChange()\" [(ngModel)]=\"vehicle.make\" name=\"make\">\n            <option value=\"\"></option>\n            <option  *ngFor=\"let make of makes\" value=\"{{make.id}}\">{{make.name}}</option>\n        </select>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"model\">Model</label>\n        <select id=\"model\" class=\"form-control\">\n            <option value=\"\"></option>\n            <option *ngFor=\"let model of models\" value=\"{{model.id}}\">{{model.name}}</option>\n        </select>\n    </div> <br>\n\n    \n    <div>\n        <p>Is the vehicle registered?</p>\n    <label for=\"registered\" class=\"radio-inline\" style=\"margin-right: 10px;\">\n        <input type=\"radio\" id=\"registered\" name=\"isRegistered\" value=\"true\">Yes\n    </label>\n    <label for=\"notRegistered\" class=\"radio-inline\">\n        <input type=\"radio\" id=\"notRegistered\" name=\"isRegistered\" value=\"false\">No\n    </label>\n    </div><br>\n\n    <h2>Features</h2>\n    <div class=\"checkbox\" *ngFor=\"let feature of features\">\n        <label for=\"{{feature.id}}\">\n            <input type=\"checkbox\" id=\"{{feature.id}}\"> {{ feature.name }}\n        </label>\n    </div>\n\n    \n</form>","import { Component } from '@angular/core';\nimport { VehicleService } from 'src/app/services/vehicle.service';\nimport { MakeViewModel } from 'src/app/models/MakeViewModel';\n\n@Component({\n  selector: 'app-vehicle-form',\n  templateUrl: './vehicle-form.component.html',\n  styleUrls: ['./vehicle-form.component.css']\n})\nexport class VehicleFormComponent {\nmakes!: any[];\nvehicle: any = {};\nmodels!: any[];\nfeatures: any[] = [\n  {id: 1,\n  name: \"Feature1\"}, \n  {id: 2,\n  name: \"Feature2\"},\n  {id: 3,\n  name: \"Feature3\"}\n];\n\nconstructor(\n  private vehicleService: VehicleService) {}\n\nngOnInit() {\n  this.vehicleService.getMakes().subscribe(result => {\n    this.makes = result;\n  })\n\n  // this.makeService.getFeatures().subscribe(result => {\n  //   this.features = result;\n  // })\n}\n\nonMakeChange() {\nvar selectedMake = this.makes.find(m => m.id == this.vehicle.make);\nthis.models = selectedMake ? selectedMake.models : [];\n}\n\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}