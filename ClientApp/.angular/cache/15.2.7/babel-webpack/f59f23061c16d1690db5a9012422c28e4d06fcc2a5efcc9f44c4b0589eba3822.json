{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/vehicle.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction VehicleFormComponent_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const make_r3 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", make_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(make_r3.name);\n  }\n}\nfunction VehicleFormComponent_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const model_r4 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", model_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(model_r4.name);\n  }\n}\nfunction VehicleFormComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"label\", 21)(2, \"input\", 22);\n    i0.ɵɵlistener(\"change\", function VehicleFormComponent_div_31_Template_input_change_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const f_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onFeatureToggle(f_r5.id, $event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const f_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"feature\", f_r5.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"feature\", f_r5.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", f_r5.name, \" \");\n  }\n}\nexport class VehicleFormComponent {\n  constructor(vehicleService) {\n    this.vehicleService = vehicleService;\n  }\n  ngOnInit() {\n    this.vehicleService.getMakes().subscribe(result => {\n      this.makes = result;\n    });\n    this.vehicleService.getFeatures().subscribe(result => {\n      this.features = result;\n    });\n  }\n  onMakeChange() {\n    var selectedMake = this.makes.find(m => m.id == this.vehicle.makeId);\n    this.models = selectedMake ? selectedMake.models : [];\n    delete this.vehicle.modelId;\n  }\n  onFeatureToggle(featureId, $event) {\n    //tells angular that 'checked' is a property of target\n    const target = $event.target;\n    if (target && target.checked) {\n      this.vehicle.features.push(featureId);\n    }\n  }\n}\nVehicleFormComponent.ɵfac = function VehicleFormComponent_Factory(t) {\n  return new (t || VehicleFormComponent)(i0.ɵɵdirectiveInject(i1.VehicleService));\n};\nVehicleFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VehicleFormComponent,\n  selectors: [[\"app-vehicle-form\"]],\n  decls: 49,\n  vars: 10,\n  consts: [[1, \"form-group\"], [\"for\", \"make\"], [\"id\", \"make\", \"name\", \"makeId\", 1, \"form-control\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"model\"], [\"id\", \"model\", \"name\", \"modelId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"registered\", 1, \"radio-inline\", 2, \"margin-right\", \"10px\"], [\"type\", \"radio\", \"id\", \"registered\", \"name\", \"isRegistered\", \"value\", \"true\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"notRegistered\", 1, \"radio-inline\"], [\"type\", \"radio\", \"id\", \"notRegistered\", \"name\", \"isRegistered\", \"value\", \"false\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"checkbox\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"contactName\"], [\"id\", \"contactName\", \"type\", \"text\", 1, \"form-control\"], [\"for\", \"contactPhone\"], [\"id\", \"contactPhone\", \"type\", \"text\", 1, \"form-control\"], [\"for\", \"contactEmail\"], [\"id\", \"contactEmail\", \"type\", \"text\", 1, \"form-control\"], [1, \"btn\", \"btn-primary\"], [3, \"value\"], [1, \"checkbox\"], [3, \"for\"], [\"type\", \"checkbox\", 3, \"id\", \"change\"]],\n  template: function VehicleFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"New Vehicle\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3);\n      i0.ɵɵpipe(4, \"json\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\")(6, \"div\", 0)(7, \"label\", 1);\n      i0.ɵɵtext(8, \"Make\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"select\", 2);\n      i0.ɵɵlistener(\"change\", function VehicleFormComponent_Template_select_change_9_listener() {\n        return ctx.onMakeChange();\n      })(\"ngModelChange\", function VehicleFormComponent_Template_select_ngModelChange_9_listener($event) {\n        return ctx.vehicle.makeId = $event;\n      });\n      i0.ɵɵelement(10, \"option\", 3);\n      i0.ɵɵtemplate(11, VehicleFormComponent_option_11_Template, 2, 2, \"option\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 0)(13, \"label\", 5);\n      i0.ɵɵtext(14, \"Model\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"select\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function VehicleFormComponent_Template_select_ngModelChange_15_listener($event) {\n        return ctx.vehicle.modelId = $event;\n      });\n      i0.ɵɵelement(16, \"option\", 3);\n      i0.ɵɵtemplate(17, VehicleFormComponent_option_17_Template, 2, 2, \"option\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(18, \"br\");\n      i0.ɵɵelementStart(19, \"div\")(20, \"p\");\n      i0.ɵɵtext(21, \"Is the vehicle registered?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"label\", 7)(23, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function VehicleFormComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.vehicle.isRegistered = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(24, \"Yes \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"label\", 9)(26, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function VehicleFormComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.vehicle.isRegistered = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(27, \"No \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(28, \"br\");\n      i0.ɵɵelementStart(29, \"h2\");\n      i0.ɵɵtext(30, \"Features\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(31, VehicleFormComponent_div_31_Template, 4, 3, \"div\", 11);\n      i0.ɵɵelement(32, \"br\");\n      i0.ɵɵelementStart(33, \"h2\");\n      i0.ɵɵtext(34, \"Contact\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"div\", 0)(36, \"label\", 12);\n      i0.ɵɵtext(37, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(38, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"div\", 0)(40, \"label\", 14);\n      i0.ɵɵtext(41, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(42, \"input\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"div\", 0)(44, \"label\", 16);\n      i0.ɵɵtext(45, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(46, \"input\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"button\", 18);\n      i0.ɵɵtext(48, \"Save\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 8, ctx.vehicle), \"\\n\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.vehicle.makeId);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.makes);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.vehicle.modelId);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.models);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.vehicle.isRegistered);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.vehicle.isRegistered);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.features);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.RadioControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i2.JsonPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","VehicleFormComponent","constructor","vehicleService","ngOnInit","getMakes","subscribe","result","makes","getFeatures","features","onMakeChange","selectedMake","find","m","id","vehicle","makeId","models","modelId","onFeatureToggle","featureId","$event","target","checked","push","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\robfu\\vega\\ClientApp\\src\\app\\components\\vehicle-form\\vehicle-form.component.html","C:\\Users\\robfu\\vega\\ClientApp\\src\\app\\components\\vehicle-form\\vehicle-form.component.ts"],"sourcesContent":["<h1>New Vehicle</h1>\n\n<p>\n    {{vehicle | json}}\n</p>\n\n<form >\n    <div class=\"form-group\">\n        <label for=\"make\">Make</label>\n        <select id=\"make\" class=\"form-control\" (change)=\"onMakeChange()\" [(ngModel)]=\"vehicle.makeId\" name=\"makeId\">\n            <option value=\"\"></option>\n            <option  *ngFor=\"let make of makes\" value=\"{{make.id}}\">{{make.name}}</option>\n        </select>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"model\">Model</label>\n        <select id=\"model\" class=\"form-control\" [(ngModel)]=\"vehicle.modelId\" name=\"modelId\">\n            <option value=\"\"></option>\n            <option *ngFor=\"let model of models\" value=\"{{model.id}}\">{{model.name}}</option>\n        </select>\n    </div> <br>\n\n    \n    <div>\n        <p>Is the vehicle registered?</p>\n    <label for=\"registered\" class=\"radio-inline\" style=\"margin-right: 10px;\">\n        <input type=\"radio\" id=\"registered\" name=\"isRegistered\" value=\"true\" [(ngModel)]=\"vehicle.isRegistered\">Yes\n    </label>\n    <label for=\"notRegistered\" class=\"radio-inline\">\n        <input type=\"radio\" id=\"notRegistered\" name=\"isRegistered\" value=\"false\" [(ngModel)]=\"vehicle.isRegistered\">No\n    </label>\n    </div><br>\n\n    <h2>Features</h2>\n    <div class=\"checkbox\" *ngFor=\"let f of features\">\n        <label for=\"feature{{f.id}}\">\n            <input type=\"checkbox\" id=\"feature{{f.id}}\" (change)=\"onFeatureToggle(f.id, $event)\"> {{ f.name }}\n        </label>\n    </div><br>\n\n    <h2>Contact</h2>\n    <div class=\"form-group\">\n        <label for=\"contactName\">Name</label>\n        <input id=\"contactName\" type=\"text\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"contactPhone\">Phone</label>\n        <input id=\"contactPhone\" type=\"text\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"contactEmail\">Email</label>\n        <input id=\"contactEmail\" type=\"text\" class=\"form-control\">\n    </div>\n    <button class=\"btn btn-primary\">Save</button>\n</form>","import { Component } from '@angular/core';\nimport { VehicleService } from 'src/app/services/vehicle.service';\nimport { MakeViewModel } from 'src/app/models/MakeViewModel';\n\n@Component({\n  selector: 'app-vehicle-form',\n  templateUrl: './vehicle-form.component.html',\n  styleUrls: ['./vehicle-form.component.css']\n})\nexport class VehicleFormComponent {\nmakes!: any[];\n\nmodels!: any[];\nfeatures!: any[];\n\nconstructor(\n  private vehicleService: VehicleService) {}\n\nngOnInit() {\n  this.vehicleService.getMakes().subscribe(result => {\n    this.makes = result;\n  })\n\n  this.vehicleService.getFeatures().subscribe(result => {\n    this.features = result;\n  })\n}\n\nonMakeChange() {\nvar selectedMake = this.makes.find(m => m.id == this.vehicle.makeId);\nthis.models = selectedMake ? selectedMake.models : [];\ndelete this.vehicle.modelId;\n}\n\nonFeatureToggle(featureId: number, $event: Event) {\n  //tells angular that 'checked' is a property of target\n  const target = $event.target as HTMLInputElement | null;\n  \n  if (target && target.checked) {\n    this.vehicle.features.push(featureId);\n  }\n}\n\n\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}